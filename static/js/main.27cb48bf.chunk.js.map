{"version":3,"sources":["Vec2.tsx","AspectRatio.tsx","util.ts","Sim.tsx","InputManager.tsx","InputDisplay.tsx","Vec2Input.tsx","App.tsx","timing.tsx","serviceWorker.ts","index.tsx"],"names":["VEC2_ZERO","x","y","vec2Add","a","b","vec2Scale","v","amount","AspectRatio","props","width","height","style","divProps","paddingTop","memoryConservingMap","arr","mapFn","mappedArr","changed","forEach","item","mappedItem","push","replaceArrayEntry","index","entry","length","Error","result","slice","splice","clamp","value","min","max","nextSimState","s","ticks","players","p","sim","velocity","next","i","position","size","nextPlayerState","time","DEFAULT_SIM_RUNNER_OPTIONS","inputTickDelay","historyLength","DEFAULT_MULTI_SIM_RUNNER_OPTIONS","networkTickDelay","MultiSimRunner","initialState","options","runners","inTransitCommands","this","SimRunner","r","filter","itc","ticksLeft","runner","playerIndex","command","queuedCommands","tick","setPlayerVelocity","executeHistoryEntry","state","commands","type","applySimCommand","currentState","history","entriesToDelete","now","start","getHistoryIndexForTime","nextI","past","present","future","partitionCommands","testFn","trueItems","falseItems","partitionArray","cmd","cmdsForTime","rest","partitionCommandsByTime","cmds","rollbackAndApplyCommands","addToHistory","PlayerViz","player","className","number","title","top","left","SimViz","map","key","InputContext","React","createContext","InputManager","useState","setState","useEffect","listener","e","document","activeElement","nodeName","isDown","prevState","toLowerCase","window","addEventListener","removeEventListener","Provider","InputDisplay","button","opacity","useContext","toUpperCase","buttonName","getAxis","positive","negative","useAxis","positiveBtn","negativeBtn","setValue","prevValue","ref","useRef","undefined","current","usePrevious","Vec2Input","onChange","right","xVel","prevXVel","down","up","yVel","prevYVel","PLAYER_SIZE","SIM_SIZE","INITIAL_SIM","focusPageOnEnterOrESC","keyCode","preventDefault","documentElement","focus","IntegerInput","htmlFor","id","label","defaultValue","numValue","parseInt","isNaN","clampOrDefaultInt","target","onKeyDown","App","playerSpeed","setPlayerSpeed","setInputTickDelay","setNetworkTickDelay","simFPS","setSimFPS","sr","sim1","setSim1","sim2","setSim2","fpsInterval","movePlayer1","useCallback","movePlayer2","nextTick","fn","ms","intervalRef","setInterval","clearInterval","useInterval","toFixed","href","rel","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27cb48bf.chunk.js","sourcesContent":["export const VEC2_ZERO: Vec2 = { x: 0, y: 0 };\n\nexport interface Vec2 {\n  x: number;\n  y: number;\n}\n\nexport function vec2Equals(a: Vec2, b: Vec2): boolean {\n  return a.x === b.x && a.y === b.y;\n}\n\nexport function vec2Add(a: Vec2, b: Vec2): Vec2 {\n  return { x: a.x + b.x, y: a.y + b.y };\n}\n\nexport function vec2Subtract(a: Vec2, b: Vec2): Vec2 {\n  return vec2Add(a, vec2Scale(b, -1));\n}\n\nexport function vec2Scale(v: Vec2, amount: number): Vec2 {\n  return { x: amount * v.x, y: amount * v.y };\n}\n","import React from 'react';\n\nexport const AspectRatio: React.FC<{\n  width: number,\n  height: number,\n} & React.HTMLAttributes<HTMLDivElement>> = props => {\n  const {width, height, style, ...divProps} = props;\n\n  return <div style={{\n    ...style,\n    height: 0,\n    paddingTop: `${height / width * 100}%`\n  }} {...divProps}/>;\n};\n","export function memoryConservingMap<T>(arr: T[], mapFn: (item: T) => T): T[] {\n  const mappedArr: T[] = [];\n  let changed = false;\n\n  arr.forEach(item => {\n    const mappedItem = mapFn(item);\n    if (mappedItem !== item && !changed) {\n      changed = true;\n    }\n    mappedArr.push(mappedItem)\n  });\n\n  return changed ? mappedArr : arr;\n}\n\nexport function replaceArrayEntry<T>(arr: T[], index: number, entry: T): T[] {\n  if (index < 0 || index >= arr.length) {\n    throw new Error(`Array index ${index} is out of bounds`);\n  }\n  const result = arr.slice();\n  result.splice(index, 1, entry);\n  return result;\n}\n\nexport type Jsonable = string|number|boolean|null|Jsonable[]|{[property: string]: Jsonable};\n\nexport function clone<T extends Jsonable>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function clamp(value: number, min: number, max: number): number {\n  if (value < min) {\n    return min;\n  }\n  if (value > max) {\n    return max;\n  }\n  return value;\n}\n\nexport function partitionArray<T>(arr: T[], testFn: (item: T) => boolean): [T[], T[]] {\n  const trueItems: T[] = [];\n  const falseItems: T[] = [];\n\n  arr.forEach(item => {\n    if (testFn(item)) {\n      trueItems.push(item);\n    } else {\n      falseItems.push(item);\n    }\n  });\n\n  return [trueItems, falseItems];\n}\n","import React from 'react';\nimport './Sim.css';\nimport { Vec2, vec2Equals, VEC2_ZERO, vec2Add } from './Vec2';\nimport { AspectRatio } from './AspectRatio';\nimport { memoryConservingMap, replaceArrayEntry, clamp, partitionArray } from './util';\n\nexport type SetPlayerVelocityCommand = {\n  type: 'set-velocity';\n  time: number;\n  playerIndex: number;\n  velocity: Vec2;\n};\n\nexport type SimCommand = SetPlayerVelocityCommand;\n\nexport interface Player {\n  number: number;\n  position: Vec2;\n  velocity: Vec2;\n  size: Vec2;\n}\n\nexport interface Sim {\n  players: Player[];\n  size: Vec2;\n  time: number;\n}\n\nexport function nextPlayerState(p: Player, sim: Sim, ticks: number): Player {\n  if (vec2Equals(p.velocity, VEC2_ZERO)) {\n    return p;\n  }\n  const next: Player = {...p};\n  for (let i = 0; i < ticks; i++) {\n    next.position = vec2Add(next.position, p.velocity);\n  }\n  next.position.x = clamp(next.position.x, 0, sim.size.x - p.size.x);\n  next.position.y = clamp(next.position.y, 0, sim.size.y - p.size.y);\n  return next;\n}\n\nexport function nextSimState(s: Sim, ticks: number = 1): Sim {\n  return {\n    ...s,\n    players: memoryConservingMap(s.players, p => nextPlayerState(p, s, ticks)),\n    time: s.time + ticks\n  };\n}\n\nexport function applySimCommand(s: Sim, command: SimCommand): Sim {\n  if (command.time !== s.time) {\n    throw new Error(`We can only apply commands made at the same time as the sim right now`);\n  }\n  switch (command.type) {\n    case 'set-velocity':\n      return {\n        ...s,\n        players: replaceArrayEntry(s.players, command.playerIndex, {\n          ...s.players[command.playerIndex],\n          velocity: command.velocity\n        })\n      };\n  }\n}\n\nexport type SimRunnerOptions = {\n  inputTickDelay: number,\n  historyLength: number,\n};\n\nconst DEFAULT_SIM_RUNNER_OPTIONS: SimRunnerOptions = {\n  inputTickDelay: 0,\n  historyLength: 1000\n};\n\nexport type MultiSimRunnerOptions = SimRunnerOptions & {\n  networkTickDelay: number\n};\n\nconst DEFAULT_MULTI_SIM_RUNNER_OPTIONS: MultiSimRunnerOptions = {\n  ...DEFAULT_SIM_RUNNER_OPTIONS,\n  networkTickDelay: 1\n};\n\nexport class MultiSimRunner {\n  runners: SimRunner[] = [];\n  options: MultiSimRunnerOptions;\n  inTransitCommands: {ticksLeft: number, command: SimCommand}[] = [];\n\n  constructor(initialState: Sim, options?: Partial<MultiSimRunnerOptions>) {\n    this.options = {\n      ...DEFAULT_MULTI_SIM_RUNNER_OPTIONS,\n      ...options\n    };\n    for (let i = 0; i < initialState.players.length; i++) {\n      this.runners.push(new SimRunner(initialState, options));\n    }\n  }\n\n  setInputTickDelay(value: number) {\n    this.runners.forEach(r => { r.options.inputTickDelay = value; });\n  }\n\n  setNetworkTickDelay(value: number) {\n    this.options.networkTickDelay = value;\n  }\n\n  tick() {\n    this.inTransitCommands = this.inTransitCommands.filter(itc => {\n      if (itc.ticksLeft === 0) {\n        this.runners.forEach((runner, playerIndex) => {\n          if (playerIndex !== itc.command.playerIndex) {\n            runner.queuedCommands.push(itc.command);\n          }\n        });\n        return false;\n      }\n      itc.ticksLeft--;\n      return true;\n    });\n    this.runners.forEach(r => r.tick());\n  }\n\n  setPlayerVelocity(playerIndex: number, velocity: Vec2) {\n    const command = this.runners[playerIndex].setPlayerVelocity(playerIndex, velocity);\n    this.inTransitCommands.push({ticksLeft: this.options.networkTickDelay, command});\n  }\n}\n\nfunction partitionCommands(commands: SimCommand[], time: number): [SimCommand[], SimCommand[], SimCommand[]] {\n  const past: SimCommand[] = [];\n  const present: SimCommand[] = [];\n  const future: SimCommand[] = [];\n\n  commands.forEach(command => {\n    if (command.time < time) {\n      past.push(command);\n    } else if (command.time > time) {\n      future.push(command);\n    } else {\n      present.push(command);\n    }\n  });\n\n  return [past, present, future];\n}\n\nfunction executeHistoryEntry({state, commands}: SimHistoryEntry): Sim {\n  commands.forEach(command => { state = applySimCommand(state, command); });\n  state = nextSimState(state, 1);\n  return state;\n}\n\nfunction partitionCommandsByTime(commands: SimCommand[]): SimCommand[][] {\n  const result: SimCommand[][] = [];\n\n  while (commands.length > 0) {\n    const time = commands[0].time;\n    const [cmdsForTime, rest] = partitionArray(commands, cmd => cmd.time === time);\n    result.push(cmdsForTime);\n    commands = rest;\n  }\n\n  return result;\n}\n\ntype SimHistoryEntry = {\n  state: Sim;\n  commands: SimCommand[]\n};\n\nexport class SimRunner {\n  currentState: Sim;\n  history: SimHistoryEntry[] = [];\n  options: SimRunnerOptions;\n  queuedCommands: SimCommand[] = [];\n\n  constructor(readonly initialState: Sim, options?: Partial<SimRunnerOptions>) {\n    this.options = {\n      ...DEFAULT_SIM_RUNNER_OPTIONS,\n      ...options\n    };\n    this.currentState = initialState;\n  }\n\n  private addToHistory(entry: SimHistoryEntry): SimHistoryEntry {\n    this.history.push(entry);\n    const entriesToDelete = this.history.length - this.options.historyLength;\n    if (entriesToDelete > 0) {\n      this.history.splice(0, entriesToDelete);\n    }\n    return entry;\n  }\n\n  private getHistoryIndexForTime(time: number) {\n    const now = this.currentState.time;\n    const index = this.history.length - (now - time);\n    if (index < 0) {\n      throw new Error(`History is not long enough for time ${time}!`);\n    }\n    if (index >= this.history.length) {\n      throw new Error(`Time ${time} is in the present or future, not the past!`);\n    }\n    return index;\n  }\n\n  private rollbackAndApplyCommands(commands: SimCommand[]) {\n    const time = commands[0].time;\n    const start = this.getHistoryIndexForTime(time);\n    this.history[start].commands.push(...commands);\n    for (let i = start; i < this.history.length; i++) {\n      const state = executeHistoryEntry(this.history[i]);\n      const nextI = i + 1;\n      if (nextI < this.history.length) {\n        this.history[nextI].state = state;\n      } else {\n        this.currentState = state;\n      }\n    }\n  }\n\n  getStateAtTime(time: number): Sim {\n    if (time === this.currentState.time) return this.currentState;\n    return this.history[this.getHistoryIndexForTime(time)].state;\n  }\n\n  tick() {\n    const [past, present, future] = partitionCommands(this.queuedCommands, this.currentState.time);\n    this.queuedCommands = future;\n    partitionCommandsByTime(past).forEach(cmds => this.rollbackAndApplyCommands(cmds));\n    this.currentState = executeHistoryEntry(this.addToHistory({\n      state: this.currentState,\n      commands: present\n    }));\n  }\n\n  setPlayerVelocity(playerIndex: number, velocity: Vec2): SimCommand {\n    const cmd: SimCommand = {\n      type: 'set-velocity',\n      time: this.currentState.time + this.options.inputTickDelay,\n      playerIndex,\n      velocity\n    };\n    this.queuedCommands.push(cmd);\n    return cmd;\n  }\n}\n\nexport const PlayerViz: React.FC<{player: Player, sim: Sim}> = ({player, sim}) => {\n  return (\n    <div className={`Player-viz Player-number-${player.number}`} title={`Player ${player.number}`} style={{\n      width: `${player.size.x / sim.size.x * 100}%`,\n      top: `${player.position.y / sim.size.y * 100}%`,\n      left: `${player.position.x / sim.size.x * 100}%`,\n    }}>\n      <AspectRatio width={player.size.x} height={player.size.y} />\n    </div>\n  );\n};\n\nexport const SimViz: React.FC<{sim: Sim}> = ({sim}) => {\n  return (\n    <AspectRatio className=\"Sim-viz\" width={sim.size.x} height={sim.size.y}>\n      {sim.players.map(player => <PlayerViz key={player.number} player={player} sim={sim} />)}\n    </AspectRatio>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nconst USE_CAPTURE = true;\n\nexport type Button = 'w'|'a'|'s'|'d'|'arrowup'|'arrowdown'|'arrowleft'|'arrowright';\n\nexport type ButtonState = {\n  [K in Button]?: boolean\n};\n\nexport const InputContext = React.createContext<ButtonState>({});\n\nexport const InputManager: React.FC = props => {\n  const [state, setState] = useState<ButtonState>({});\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (document.activeElement && document.activeElement.nodeName === 'INPUT') return;\n\n      const isDown = e.type === 'keydown';\n\n      setState(prevState => ({\n        ...prevState,\n        [e.key.toLowerCase()]: isDown\n      }));\n    };\n\n    window.addEventListener('keydown', listener, USE_CAPTURE);\n    window.addEventListener('keyup', listener, USE_CAPTURE);\n\n    return () => {\n      window.removeEventListener('keydown', listener, USE_CAPTURE);\n      window.removeEventListener('keyup', listener, USE_CAPTURE);\n    };\n  }, []);\n\n  return <InputContext.Provider value={state} {...props} />;\n};\n\nexport function buttonName(button: Button): string {\n  switch (button) {\n    case 'arrowup': return '↑';\n    case 'arrowdown': return '↓';\n    case 'arrowleft': return '←';\n    case 'arrowright': return '→';\n  }\n\n  return button.toUpperCase();\n}\n","import React, { useContext } from 'react';\nimport { Button, InputContext, buttonName } from './InputManager';\n\nexport const InputDisplay: React.FC<{\n  button: Button;\n}> = ({ button }) => {\n  const isDown = useContext(InputContext)[button];\n  const opacity = isDown ? 1.0 : 0.66;\n  return <kbd style={{ opacity }}>{buttonName(button)}</kbd>;\n};\n","import React, { useContext, useEffect, useState, useRef } from 'react';\nimport { Button, InputContext } from './InputManager';\nimport { Vec2 } from './Vec2';\nimport { InputDisplay } from './InputDisplay';\n\nfunction getAxis(positive: boolean, negative: boolean): number {\n  if (positive && negative) return 0;\n  if (!positive && !negative) return 0;\n  if (positive) return 1.0;\n  return -1.0;\n}\n\n// https://stackoverflow.com/a/53446665\nfunction usePrevious<T>(value: T): T|undefined {\n  const ref = useRef<T|undefined>(undefined);\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n\nfunction useAxis(positiveBtn: Button, negativeBtn: Button): [number, number|undefined] {\n  const {[positiveBtn]: positive, [negativeBtn]: negative} = useContext(InputContext);\n  const [value, setValue] = useState(getAxis(!!positive, !!negative));\n  const prevValue = usePrevious(value);\n\n  useEffect(() => setValue(getAxis(!!positive, !!negative)), [positive, negative]);\n\n  return [value, prevValue];\n}\n\nexport const Vec2Input: React.FC<{\n  up: Button,\n  down: Button,\n  left: Button,\n  right: Button,\n  onChange: (velocity: Vec2) => void\n}> = (props) => {\n  const { onChange } = props;\n  const [xVel, prevXVel] = useAxis(props.right, props.left);\n  const [yVel, prevYVel] = useAxis(props.down, props.up);\n\n  useEffect(() => {\n    if (yVel !== prevYVel || xVel !== prevXVel) {\n      onChange({x: xVel, y: yVel});\n    }\n  }, [xVel, prevXVel, yVel, prevYVel, onChange]);\n\n  return (\n    <div>\n      <div><InputDisplay button={props.up} /></div>\n      <div>\n        <InputDisplay button={props.left} />\n        <InputDisplay button={props.down} />\n        <InputDisplay button={props.right} />\n      </div>\n    </div>\n  );\n};\n","import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport './App.css';\nimport { Player, Sim, MultiSimRunner, SimViz } from './Sim';\nimport { Vec2, VEC2_ZERO, vec2Subtract, vec2Scale } from \"./Vec2\";\nimport { InputManager } from './InputManager';\nimport { Vec2Input } from './Vec2Input';\nimport { useInterval } from './timing';\nimport { clamp } from './util';\n\nconst PLAYER_SIZE: Vec2 = {x: 5, y: 5};\nconst SIM_SIZE: Vec2 = {x: 100, y: 100};\n\nconst INITIAL_P1: Player = {\n  number: 1,\n  position: VEC2_ZERO,\n  velocity: VEC2_ZERO,\n  size: PLAYER_SIZE,\n};\n\nconst INITIAL_P2: Player = {\n  number: 2,\n  position: vec2Subtract(SIM_SIZE, PLAYER_SIZE),\n  velocity: VEC2_ZERO,\n  size: PLAYER_SIZE,\n};\n\nconst INITIAL_SIM: Sim = {\n  players: [INITIAL_P1, INITIAL_P2],\n  size: SIM_SIZE,\n  time: 0\n};\n\nfunction clampOrDefaultInt(value: string, min: number, max: number, defaultValue: number): number {\n  const numValue = parseInt(value);\n  if (isNaN(numValue)) {\n    return defaultValue;\n  }\n  return clamp(numValue, min, max);\n}\n\nconst MIN_FPS = 1;\nconst MAX_FPS = 60;\nconst MIN_SPEED = 1;\nconst MAX_SPEED = 100;\nconst SPEED_SCALE = 0.1;\n\nfunction focusPageOnEnterOrESC(e: React.KeyboardEvent) {\n  if (e.keyCode === 13 || e.keyCode === 27) {\n    e.preventDefault();\n    document.documentElement.focus();\n  }\n}\n\nconst IntegerInput: React.FC<{\n  id: string,\n  label: string,\n  value: number,\n  onChange: (value: number) => void,\n  min: number,\n  max: number\n}> = (props) => {\n  return <>\n    <label htmlFor={props.id}>{props.label}:</label>{' '}\n    <input type=\"number\" value={props.value} min={props.min} max={props.max} onChange={(e) => props.onChange(clampOrDefaultInt(e.target.value, props.min, props.max, props.value))} onKeyDown={focusPageOnEnterOrESC} />\n  </>\n};\n\nconst App: React.FC = () => {\n  const [playerSpeed, setPlayerSpeed] = useState(10);\n  const [inputTickDelay, setInputTickDelay] = useState(3);\n  const [networkTickDelay, setNetworkTickDelay] = useState(2);\n  const [simFPS, setSimFPS] = useState(MAX_FPS);\n  const sr = useRef(new MultiSimRunner(INITIAL_SIM, {inputTickDelay, networkTickDelay})).current;\n  const [sim1, setSim1] = useState(sr.runners[0].currentState);\n  const [sim2, setSim2] = useState(sr.runners[1].currentState);\n  const fpsInterval = 1000 / simFPS;\n\n  const movePlayer1 = useCallback((v: Vec2) => sr.setPlayerVelocity(0, vec2Scale(v, SPEED_SCALE * playerSpeed)), [sr, playerSpeed]);\n  const movePlayer2 = useCallback((v: Vec2) => sr.setPlayerVelocity(1, vec2Scale(v, SPEED_SCALE * playerSpeed)), [sr, playerSpeed]);\n  const nextTick = useCallback(() => {\n    sr.tick();\n    setSim1(sr.runners[0].currentState);\n    setSim2(sr.runners[1].currentState);\n  }, [sr]);\n\n  useEffect(() => sr.setInputTickDelay(inputTickDelay), [inputTickDelay, sr]);\n  useEffect(() => sr.setNetworkTickDelay(networkTickDelay), [networkTickDelay, sr]);\n  useInterval(nextTick, fpsInterval);\n\n  return (\n    <InputManager>\n      <div className=\"App\">\n        <div className=\"App-viewports\">\n          <div>\n            <h2>Player 1</h2>\n            <SimViz sim={sim1} />\n            <Vec2Input up=\"w\" down=\"s\" left=\"a\" right=\"d\" onChange={movePlayer1} />\n          </div>\n          <div>\n            <h2>Configuration</h2>\n            <p>\n              <IntegerInput id=\"fps\" label=\"Simulation FPS\" min={MIN_FPS} max={MAX_FPS} value={simFPS} onChange={setSimFPS} />\n              <span className=\"App-desc\">{fpsInterval.toFixed(0)}ms between frames</span>\n            </p>\n            <p>\n              <IntegerInput id=\"itd\" label=\"Input frame delay\" min={0} max={100} value={inputTickDelay} onChange={setInputTickDelay} />\n              <span className=\"App-desc\">{(fpsInterval * inputTickDelay).toFixed(0)}ms before input affects simulation</span>\n            </p>\n            <p>\n              <IntegerInput id=\"ntd\" label=\"Network frame delay\" min={0} max={100} value={networkTickDelay} onChange={setNetworkTickDelay} />\n              <span className=\"App-desc\">{(fpsInterval * networkTickDelay).toFixed(0)}ms of simulated network lag</span>\n            </p>\n            <p>\n              <IntegerInput id=\"speed\" label=\"Player speed\" min={MIN_SPEED} max={MAX_SPEED} value={playerSpeed} onChange={setPlayerSpeed} />\n            </p>\n            <p className=\"App-desc\">\n              This is an exploration of delay and rollback-based netcode in a simulated network environment. For more details, please see the <a href=\"https://github.com/toolness/netcode-fun#readme\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub README</a>.\n            </p>\n          </div>\n          <div>\n            <h2>Player 2</h2>\n            <SimViz sim={sim2} />\n            <Vec2Input up=\"arrowup\" down=\"arrowdown\" left=\"arrowleft\" right=\"arrowright\" onChange={movePlayer2} />\n          </div>\n        </div>\n      </div>\n    </InputManager>\n  );\n}\n\nexport default App;\n","import { useEffect, useRef } from 'react';\n\nexport function useRequestAnimationFrame(fn: () => void) {\n  const animRef = useRef(-1);\n  useEffect(() => {\n    const animate = () => {\n      fn();\n      animRef.current = requestAnimationFrame(animate);\n    };\n    animRef.current = requestAnimationFrame(animate);\n    return () => {\n      cancelAnimationFrame(animRef.current);\n    };\n  }, [fn]);\n}\n\nexport function useInterval(fn: () => void, ms: number) {\n  const intervalRef = useRef(-1);\n\n  useEffect(() => {\n    intervalRef.current = window.setInterval(fn, ms);\n    return () => {\n      window.clearInterval(intervalRef.current);\n    };\n  }, [fn, ms]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}